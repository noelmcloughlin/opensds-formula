{% from 'site.j2' import sitedata as site %}

soda:
  deploy_project: {{ site.deploy_project }}
  host: {{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}
  ports:
    controller: {{ site.port_controller }}
    dock: {{ site.port_dock }}
  dir:
    go: {{ site.go_path }}/src/github.com/soda
  environ:
    controller_endpoint: {{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}:{{ site.port_controller }}
    soda_auth_strategy: {{ site.auth_strategy }}
    csi_endpoint: {{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}:{{ site.port_csi }}
    gopath: {{ site.go_path }}

  ######### BACKENDS ##################
  backend:
    block:
      ids: {{ site.enabled_backends }}
      container:
        cinder:
          image: {{ site.container_cinder_img }}
          version: {{ site.cinder_version }}
          custom:
            dbports: '3307:3306'
      daemon:
        cinder:
          strategy: repo-compose-config-build-systemd
          repo:
            branch: {{ site.cinder_version }}
        lvm:
          strategy: saltstack-formulas/lvm-formula

  ######## BACKEND DRIVERS ###########
    drivers:
      cinder:
        pool:
          {{ site.cinder_poolname }}:
            extras:
              advanced:
                custom_feature_g: 'h'
        authOptions:
          endpoint: 'http://{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}/identity'
          cinderEndpoint: 'http://{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}:8776/v2'
          domainId: {{ site.project_domain_name }}
          projectName: {{ site.project_name }}
          domainName: {{ site.user_domain_name }}
          username: {{ site.controller_service }}
          password: {{ site.devstack_password }}
          tenantName: {{ site.controller_service }}

      nfs:
        tgtBindIp: {{ site.tgtBindIp }}

      netapp_ontap_san:
        version: 1
        username: {{ site.controller_service }}
        password: {{ site.devstack_password }}
        managementLIF: {{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}
        dataLIF: {{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}
        
      lvm:
        tgtBindIp: {{ site.tgtBindIp }}
        pool:
          {{ site.lvm_poolname }}:
            extras:
              advanced:
                custom_feature_a: 'b'
      ceph:
        pool:
          {{ site.ceph_poolname }}:
            extras:
              advanced:
                custom_feature_c: 'd'

      fusionstorage:
        authOptions:
          fmIp: {{ site.fusionstorage_fmip }}
          fsaIp: {{ site.fusionstorage_fsaip }}
        pool:
          {{ site.fusionstorage_poolname }}:
            extras:
              advanced:
                custom_feature_e: 'f'

      dorado:
        pool:
          {{ site.dorado_poolname }}:
            extras:
              advanced:
                custom_feature_g: 'h'

      drbd:
        Hosts:
          - Hostname: {{ site.drbd_host_0_name }}
            IP: {{ site.drbd_host_0_ipv4 }}
            Node-ID: 0
          - Hostname: {{ site.drbd_host_1_name }}
            IP: {{ site.drbd_host_1_ipv4 }}
            Node-ID: 1


  ########### DOCK ###############
  dock:
    conf:
      dock:
        api_endpoint: {{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}:{{ site.port_dock }}
        dock_type: {{ site.dock_type }}
        enabled_backends: {{ site.enabled_backends }}
    container:
      dock:
        image: {{ site.container_dock_img }}
        version: {{ site.dock_version }}
        ports:
          - {{ site.port_dock }}
          - {{ site.port_dock }}/udp
        port_bindings:
          - '{{ site.port_dock }}:{{ site.port_dock }}'
    daemon:
      api:
        strategy: binaries
      dock:
        strategy: config-systemd

  ############ SODA TELEMETRY ###########
  telemetry: {}

  ############ SODA MULTICLOUD #############
  multicloud:
    release: {{ site.multicloud_release }}
    service: {{ site.multicloud_service }}
    ids:
      - {{ site.multicloud_service }}
    conf:
      {{ site.multicloud_service }}:
        endpoint: {{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1'  }}
        port: {{ site.port_multicloud }}
    container:
      {{ site.multicloud_service }}:
    daemon:
      {{ site.multicloud_service }}:
        strategy: keystone-repo-config-compose-build-systemd
        repo:
          branch: {{ site.multicloud_release }}


  ############ SODA AUTH #############
  auth:
    ids:
      - sodaauth
      - keystone_authtoken
    conf:
      keystone_authtoken:
        memcached_servers: '{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1'  }}:11211'
        auth_uri: 'http://{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}/identity'
        auth_url: 'http://{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}/identity'
        username: {{ site.controller_service }}
        password: {{ site.devstack_password }}
        auth_type: password
        project_domain_name: {{ site.project_domain_name }}
        project_name: {{ site.project_name }}
        user_domain_name: {{ site.user_domain_name }}
    daemon:
      sodaauth:
        strategy: config-keystone   ##verified on Ubuntu sodafoundation/installer/salt
        endpoint_ipv4: http://{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}
        endpoint_port: {{ site.port_controller }}

  ############ SODA DATABASE #############
  database:
    ids:
      - database
      - etcd
    conf:
      database:
        endpoint: '{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}:{{ site.port_auth1 }},http://{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}:{{ site.port_auth2 }}'
        credential: '{{ site.controller_service }}:{{ site.devstack_password }}@{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1'}}:{{ site.port_mysql }}/dbname'
    daemon:
      database:
        strategy: config-etcd-formula/container


  ############### SODA CONTROLLER ################
  controller:
    release: {{ site.controller_release }}
    service: {{ site.controller_service }}
    conf:
      sodalet:
        api_endpoint: {{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1'}}:{{ site.port_controller }}
        auth_strategy: {{ site.auth_strategy }}   ### note: noauth verified on ubuntu salt installer
    container:
      controller:
        image: {{ site.container_controller_img }}
        version: {{ site.controller_version }}
        ports:
          - {{ site.port_controller }}
          - {{ site.port_controller }}/udp
        port_bindings:
          - {{site.host_ipv4 or site.host_ipv6 or '127.0.0.1'}}:{{site.port_controller}}:{{site.port_controller}}
    daemon:
      controller:
        strategy: repo-config-build-binaries-systemd
        endpoint_ipv4: http://{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}
        endpoint_port: {{ site.port_controller }}

  ############### SODA DASHBOARD(S) ################
  dashboard:
    conf:
      dashboard:
        endpoint: http://{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}
        port: {{ site.port_controller }}
    container:
      dashboard:
         image: {{ site.container_dashboard_img }}
         version: {{ site.dashboard_version }}
         env:
           SODA_HOST_IP: {{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}
    daemon:
      dashboard:
        strategy: config-container
        repo:
          branch: {{ site.dashboard_version }}

  ############### SODA NORTH-BOUND-PLUGINS ################
  nbp:
    release: {{ site.nbp_release }}
    plugin_type: {{ site.dock_type }}
    daemon:
      nbp:
        strategy: repo-config-systemd
        repo:
          branch: {{ site.nbp_release }}


################################
## upstream formula pillar data
################################

lvm:
  files:
    loopbackdir: {{ site.controller_path }}/volumegroups    #Where to create backing files
    remove:
      - {{ site.controller_path }}/volumegroups/{{ site.cinder_poolname }}.img
      - {{ site.controller_path }}/volumegroups/{{ site.ceph_poolname }}.img
      - {{ site.controller_path }}/volumegroups/{{ site.lvm_poolname }}.img
      - {{ site.controller_path }}/volumegroups/{{ site.fusionstorage_poolname }}.img
      - {{ site.controller_path }}/volumegroups/{{ site.dorado_poolname }}.img
    create:
      ### dd: copy a file, converting and formatting according to the operands
      dd:
        {{ site.controller_path }}/volumegroups/{{ site.lvm_poolname }}.img:      #10G
          options:
            if: /dev/urandom
            bs: 1048576
            count: 10240

      ### or truncate: Shrink or extend the size of each FILE to the specified size
      truncate:
        {{ site.controller_path }}/volumegroups/{{ site.cinder_poolname }}.img:
          options:
            size: 10G
      'truncate ':
        {{ site.controller_path }}/volumegroups/{{ site.ceph_poolname }}.img:
          options:
            size: 10G
      'truncate  ':
        {{ site.controller_path }}/volumegroups/{{ site.dorado_poolname }}.img:
          options:
            size: 10G
      'truncate   ':
        {{ site.controller_path }}/volumegroups/{{ site.fusionstorage_poolname }}.img:
          options:
            size: 10GM

      ### setup backing devices
      losetup:
        {{ site.controller_path }}/volumegroups/{{ site.lvm_poolname }}.img:
          options:
            show: True
            find: True
        {{ site.controller_path }}/volumegroups/{{ site.cinder_poolname }}.img:
          options:
            show: True
            find: True
  pv:
    create:
      /dev/loop0:
      /dev/loop1:
    remove:
      /dev/loop0:
      /dev/loop1:
  vg:
    remove:
      cinder-volumes:
      soda-volumes:
    create:
      cinder-volumes:
        devices:
          - /dev/loop0
      soda-volumes:
        devices:
          - /dev/loop1

firewalld:
  enabled: True
  services:
    saltstack:
      short: salt
      description: SaltStack rules
      ports:
        tcp:
          - 4505
          - 4506
    ceph:
      short: ceph
      description: Ceph firewall rules
      ports:
        tcp:
          - 6789
          - 6800:6810
    rabbitmq:
      short: rabbitmq
      description: RabbitMQ
      ports:
        tcp:
          - 4369         ## epmd peer discovery
          - 5671:5672    ## AMQP clients
          - 25672        ## internet-node/cli
          - 35672:35682  ## clitools
          - 15672        ## http-api, mngt-ui, rabbitmqadm
          - 61613:61614  ## STOMP
          - 1883         ## mqtt client
          - 8883         ## mqtt-tls client
          - 15674        ## STOMP-over-WebSockets
          - 15675        ## MQTT-over-WebSockets
    soda:
      short: soda
      description: Soda Foundation
      ports:
        tcp:
          - {{ site.port_api }}
          - {{ site.port_controller }}
          - {{ site.port_multicloud }}
          - {{ site.port_dock }}
          - {{ site.port_auth1 }}
          - {{ site.port_auth2 }}
          - {{ site.port_mysql }}
          - {{ site.port_mysql|int + 1 }}
          - 11211                 ## memcached
          - 3260                  ## tgt
          - 5672                  ## docker-proxy/rabbitmq
          - 6379                  ## redis
          - 33060:33070           ## cinder ?
          - 3306:3307             ## mysql
          - 8776                  ## cinder-api
          - 35357                 ## openstack
          - 9090                  ## prometheus server
          - 9091                  ## pushgateway
          - 9093                  ## alertmanager
          - 9094                  ## alertmanager clustering
          - 9100                  ## node exporter
          - 9128                  ## ceph exporter
          - 9274                  ## Kubernetes PersistentVolumeDisk usage exporter
          - 9283                  ## ceph ceph-mgr prometheus plugin
          - 9287                  ## ceph iscsi gateway stats
          - 9423                  ## HP RAID exporter
          - 9437                  ## Dell EMC Isilon exporter
          - 9438                  ## Dell EMC ECS exporter

  zones:
    public:
      short: Public
      services:
        - http
        - https
        - ssh
        - ntp
        - saltstack
        - ceph
        - soda
        - rabbitmq

      {%- if grains.os == 'Fedora' %}
    FedoraWorkstation:
      short: FedoraWorkstation
      services:
        - http
        - https
        - ssh
        - ntp
        - saltstack
        - ceph
        - soda
      {%- endif %}


devstack:
  local:
    os_project_name: {{ site.project_name }}
    os_username: {{ site.controller_service }}
    os_password: {{ site.devstack_password }}
    admin_password: {{ site.devstack_password }}
    #git_branch: 'stable/rocky'
    enabled_services: {{ site.devstack_enabled_services }}
    host_ipv4: {{ site.host_ipv4 or '127.0.0.1' }}
    host_ipv6: {{ site.host_ipv6 or '::1/128' }}
    service_host: {{ site.host_ipv4 or '127.0.0.1' }}
    db_host: {{ site.db_host or '127.0.0.1' }}
  dir:
    dest: {{ site.devstack_path }}
  cli:
    service:
      create:
        {{ site.controller_service }}{{ site.controller_release }}:
          options:
            name: {{ site.controller_service }}{{ site.controller_release }}
            description: '{{ site.controller_service }} Service'
            enable: True
        {{ site.multicloud_service }}{{ site.multicloud_release }}:
          options:
            name: '{{ site.multicloud_service }}{{ site.multicloud_release }}'
            description: '{{ site.multicloud_service }} service'
            enable: True
    user:
      create:
        {{ site.controller_service }}{{ site.controller_release }}:
          options:
            domain: {{ site.user_domain_name }}
            password: {{ site.devstack_password }}
            project: {{ site.project_name }}
            enable: True
        {{ site.multicloud_service }}{{ site.multicloud_release }}:
          options:
            domain: {{ site.user_domain_name }}
            password: {{ site.devstack_password }}
            project: {{ site.project_name }}
            enable: True
    group:
      create:
        {{ site.project_name }}:
          options:
            domain: {{ site.user_domain_name }}
      add user:
        {{ site.project_name }}:
          target:
            - {{ site.controller_service }}{{ site.controller_release }}
            - {{ site.multicloud_service }}{{ site.multicloud_release }}
        admins:
          options:
            domain: {{ site.user_domain_name }}
          target:
            - admin
    role:
      add:
        admin:
          options:
            project: {{ site.project_name }}
          user:
            - soda{{ site.controller_release }}
            - {{ site.multicloud_service }}{{ site.multicloud_release }}
        {{ site.project_name }}:
          options:
            project: {{ site.project_name }}
          group:
            - {{ site.project_name }}
    endpoint:
      create:
        'soda{{site.controller_release}} public https://{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1'}}/{{ site.port_controller }}/{{ site.controller_release }}/%\(tenant_id\)s':
          options:
            region: RegionOne
            enable: True
        'soda{{site.controller_release}} internal https://{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1'}}/{{ site.port_controller }}/{{ site.controller_release }}/%\(tenant_id\)s':
          options:
            region: RegionOne
            enable: True
        'soda{{site.controller_release}} admin https://{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1'}}/{{ site.port_controller }}/{{ site.controller_release }}/%\(tenant_id\)s':
          options:
            region: RegionOne
            enable: True
        '{{ site.multicloud_service }}{{ site.multicloud_release }} public https://{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1'}}:{{ site.port_multicloud }}/{{ site.multicloud_release }}/%\(tenant_id\)s':
          options:
            region: RegionOne
            enable: True
        '{{ site.multicloud_service }}{{ site.multicloud_release }} internal https://{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1'}}:{{ site.port_multicloud }}/{{ site.multicloud_release }}/%\(tenant_id\)s':
          options:
            region: RegionOne
            enable: True
        '{{ site.multicloud_service }}{{ site.multicloud_release }} admin https://{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1'}}:{{ site.port_multicloud }}/{{ site.multicloud_release }}/%\(tenant_id\)s':
          options:
            region: RegionOne
            enable: True


docker:
  # Global functions for all docker_container states
  install_docker_py: True
  containers:
    skip_translate: ports
    force_present: False
    force_running: False       #maybe unsupported by python-py
    error_on_absent: False
    restart_policy: always
    network_mode: host

timezone:
  name: {{ site.timezone or 'America/Denver' }}
  utc: True

resolver:
  ng:
    resolvconf:
      enabled: False
  domain: {{ site.ipdomain or 'example.com' }}
  nameservers:
    - {{ site.dns_host1 }}
    - {{ site.dns_host2 }}
  options:
    - rotate
    - timeout:1
    - attempts:5

nginx:
  servers:
    managed:
      default:
            {%- if grains.os_family in ('RedHat', 'Debian',) %}
        available_dir: /etc/nginx/sites-available
        enabled_dir: /etc/nginx/sites-available
            {%- endif %}
        enabled: True
        overwrite: True
        config:
          - server:
            - root:
              - /var/www/html
            - server_name: '_'
            - listen:
              - '8088 default_server'
            - listen:
              - '[::]:8088 default_server'
        {%- if grains.os_family == 'Debian' %}
            - index: 'index.html index.htm index.nginx-debian.html'
        {%- else %}
            - index: 'index.html index.htm'
        {%- endif %}
            - location /{{ site.controller_release }}/:
              - proxy_pass: 'http://{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1'}}:{{ site.port_controller }}/{{ site.controller_release }}'
            - location /v3/:
              - proxy_pass: 'http://{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1'}}/identity/v3/'
            - location /v1beta/:
              - proxy_pass: 'http://{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1'}}:{{ site.port_controller }}/{{ site.controller_release }}/'

memcached:
  daemonize: True
  listen_address: {{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}

golang:
  lookup:
    prefix: {{ site.go_prefix }}
    go_root: {{ site.go_root }}           #symlink to 'go_root'/<ver>/go/
    go_path: {{ site.go_path }}
  linux:
    altpriority: {{ range(10000, 50000)| random }}


### Note: we use devstack to deploy mysql not mysql-formula ###
mysql:
  # mysql password needs to match devstack 'DATABASE_PASSWORD' !!!!!!!!! Important !!!!
  server:
    root_password: {{ site.devstack_password }}
    mysqld:
      bind_address: {{ site.db_host or site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}

etcd:
  dir:
    tmp: /tmp/etcd_tmp
  service:
    name: sodadb
    data_dir: /var/lib/etcd/sodadb
    initial_cluster: 'sodadb=http://{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}:{{ site.port_auth2 }}'
    initial_cluster_state: new
    initial_cluster_token: sodadb-1
    initial_advertise_peer_urls: 'http://{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1'}}:{{site.port_auth2}}'
    listen_peer_urls: 'http://{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}:{{ site.port_auth2 }}'
    listen_client_urls: 'http://{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}:{{ site.port_auth1 }}'
    advertise_client_urls: 'http://{{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}:{{ site.port_auth1 }}'
    #cmd_args: '--auto-tls --peer-auto-tls'
    cmd_args: ''
  docker:
    enabled: True
    image: {{ site.container_etcd_img }}
    version: {{ site.etcd_version }}
    container_name: sodadb
    skip_translate: None
    port_bindings:
      - '{{ site.port_auth1 }}:{{ site.port_auth1 }}'
      - '{{ site.port_auth2 }}:{{ site.port_auth2 }}'
    binds:
      - /usr/share/ca-certificates/:/etc/ssl/certs
    stop_local_etcd_service_first: True

ceph:
  use_upstream_repo: true

sysstat:
  pkg:
    use_upstream_source: True
    archive:
      uri: https://dl.sysstat.com/oss/release

grafana:
  pkg:
    use_upstream_archive: True
    archive:
      uri: https://dl.grafana.com/oss/release

prometheus:
  use_upstream_archive: True
  wanted:
    - prometheus
    - alertmanager
    - node_exporter
  config:
    prometheus:
      scrape_configs:
      - job_name: 'node_exporter'
        scrape_interval: 5s
        static_configs:
          - targets: ['localhost:9100']
      alerting:
        alertmanagers:
        - static_configs:
          - targets: ['localhost:9093']

    alertmanager:
      global:
        smtp_smarthost: 'localhost:25'
        smtp_from: 'alertmanager@example.org'
        smtp_auth_username: 'alertmanager'
        smtp_auth_password: 'multiline\nmysecret'
        smtp_hello: 'host.example.org'
      route:
        group_by: ['alertname', 'cluster', 'service']
        group_wait: 30s
        group_interval: 5m
        repeat_interval: 3h
        receiver: team-X-mails
        routes:
          - match_re:
              service: ^(foo1|foo2|baz)$
              receiver: team-X-mails
            routes:
            - match:
                severity: critical
              receiver: team-X-mails
      receivers:
      - name: 'team-X-mails'
        email_configs:
        - to: 'team-X+alerts@example.org'

packages:
  pips:
    wanted:
      - tox
      - click
  pkgs:
    #wanted: populated by map.jinja
    unwanted:
      - unattended-upgrades
     {%- if grains.os_family in ('RedHat',) %}
       #because of https://github.com/saltstack-formulas/mysql-formula/issues/195
      - mariadb
      - mariadb-tokudb-engine
      - mariadb-config
      - mariadb-libs
      - mariadb-rocksdb-engine
      - mariadb-common
      - mariadb-cracklib-password-check
      - mariadb-gssapi-server
      - mariadb-devel
      - mariadb-server-utils
      - mariadb-server
      - mariadb-backup
      - mariadb-errmsg
     {%- elif grains.os == 'Ubuntu' %}  {# what about debian os? #}
      - libmysqlclient-dev
      - libmysqlclient20
      - mysql-client-5.7
      - mysql-client-core-5.7
      - mysql-common
      - mysql-server
      - mysql-server-5.7
      - mysql-server-core-5.7
     {%- endif %}
     {%- if grains.os_family == 'Debian' %}
      - libradosstriper-dev
     {%- endif %}
  archives:
    wanted:
      api:
        dest: {{ site.controller_path }}/soda
        options: '--strip-components=1'
        dl:
          format: tar
          source: {{ site.api_uri }}/{{ site.api_release }}/soda-api-{{ site.api_release }}-linux-amd64.tar.gz
          hashsum: {{ site.api_hashsum }}

      controller:
        dest: {{ site.controller_path }}/soda
        options: '--strip-components=1'
        dl:
          format: tar
          source: {{ site.controller_uri }}/{{ site.controller_release }}/soda-controller-{{ site.controller_release }}-linux-amd64.tar.gz
          hashsum: {{ site.controller_hashsum }}

      dashboard:
        dest: {{ site.controller_path }}/soda
        options: '--strip-components=1'
        dl:
          format: tar
          source: {{ site.dashboard_uri }}/{{ site.dashboard_release }}/soda-dashboard-{{ site.dashboard_release }}-linux-amd64.tar.gz
          hashsum: {{ site.dashboard_hashsum }}

      delfin:
        dest: {{ site.controller_path }}/soda
        options: '--strip-components=1'
        dl:
          format: tar
          source: {{ site.delfin_uri }}/{{ site.delfin_release }}/soda-delfin-{{ site.delfin_release }}-linux-amd64.tar.gz
          hashsum: {{ site.delfin_hashsum }}

      dock:
        dest: {{ site.controller_path }}/soda
        options: '--strip-components=1'
        dl:
          format: tar
          source: {{ site.dock_uri }}/{{ site.dock_release }}/soda-dock-{{ site.dock_release }}-linux-amd64.tar.gz
          hashsum: {{ site.dock_hashsum }}

      {{ site.multicloud_service }}:
        dest: {{ site.multicloud_path }}/{{ site.multicloud_service }}
        options: '--strip-components=1'
        dl:
          format: tar
          source: {{ site.multicloud_uri }}/{{ site.multicloud_release }}/soda-multicloud-{{ site.multicloud_release }}-linux-amd64.tar.gz
          hashsum: {{ site.multicloud_hashsum }}

      nbp:
        dest: {{ site.nbp_path }}/nbp
        options: '--strip-components=1'
        dl:
          format: tar
          source: {{ site.nbp_uri }}/{{ site.nbp_release }}/soda-nbp-{{ site.nbp_release }}-linux-amd64.tar.gz
          hashsum: {{ site.nbp_hashsum }}

      orchestration:
        dest: {{ site.controller_path }}/soda
        options: '--strip-components=1'
        dl:
          format: tar
          source: {{ site.orchestration_uri }}/{{ site.orchestration_release }}/soda-orchestration-{{ site.orchestration_release }}-linux-amd64.tar.gz
          hashsum: {{ site.orchestration_hashsum }}

      cinder:
        dest: {{ site.nbp_path }}/cinder
        options: '--strip-components=1'
        dl:
          format: tar
          source: {{ site.cinder_url }}
          hashsum: {{ site.cinder_hashsum }}
    unwanted:
      - {{ site.go_path }}/src/github.com/soda/nbp
      - {{ site.go_path }}/src/github.com/soda/api
      - {{ site.nbp_path }}
      - {{ site.controller_path }}
      # /var/lib/mysql/

kubernetes:
  dir:
    binary: /usr/local/bin
  kubectl:
    version: '1.15.0'
    linux:
      altpriority: 1000
    pkg:
      binary:
        source_hash: ecec7fe4ffa03018ff00f14e228442af5c2284e57771e4916b977c20ba4e5b39  #linux amd64 binary
  minikube:
    version: '1.2.0'
    linux:
      altpriority: 1000
    pkg:
      binary:
        source_hash: eabd027438953d29a4b0f7b810c801919cc13bef3ebe7aff08c9534ac2b091ab  #linux amd64 binary

salt:
  # Set this to 'py3' to install the Python 3 packages.
  # If this is not set, the Python 2 packages will be installed by default.
  py_ver: 'py3'

  install_packages: False
  master:
    file_roots:
      base:
        - /srv/salt
    pillar_roots:
      base:
        - /srv/pillar
  minion:
    file_roots:
      base:
        - /srv/salt
    pillar_roots:
      base:
        - /srv/pillar
  ssh_roster:
    controller1:
      host: {{ site.host_ipv4 or site.host_ipv6 or '127.0.0.1' }}
      user: stack
      sudo: True
      priv: /etc/salt/ssh_keys/sshkey.pem
salt_formulas:
  git_opts:
    default:
      baseurl: https://github.com/saltstack-formulas
      basedir: /srv/formulas
  basedir_opts:
    makedirs: True
    user: root
    group: root
    mode: 755
  minion_conf:
    create_from_list: True
  list:
    base:
     {{ '- epel-formula' if grains.os_family in ('RedHat',) else '' }}
     - salt-formula
     - openssh-formula
     - packages-formula
     - firewalld-formula
     - etcd-formula
     - ceph-formula
     - deepsea-formula
     - docker-formula
     - etcd-formula
     - firewalld-formula
     - helm-formula
     - iscsi-formula
     - lvm-formula
     - packages-formula
     - devstack-formula
     - golang-formula
     - memcached-formula
     - soda-formula
     - mysql-formula
     - timezone-formula
     - resolver-formula
     - nginx-formula
     - mongodb-formula
     - node-formula
     - apache-formula
     - prometheus-formula
     - grafana-formula
     - sysstat-formula
     - kubernetes-formula
