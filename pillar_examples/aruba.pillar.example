{% import_yaml "aruba.sitedata.yaml" as aruba %}
{% set release = aruba.release %}
{% set site = aruba.sitedata %}

### SALT PILLAR DATA (consumes "sitedata.yaml" file) #### 

lvm:
  files:
    trucate:
      /tmp/bigfile.img
        options:
          size: 10M
      /tmp/cinder-volumes.img
        options:
          size: 1G
    losetup:
      /tmp/bigfile.img:
      /tmp/cinder-volumes.img:
  pv:
    create:
      /dev/loop0:
      /dev/loop1:
  vg:
    create:
      small_vg:
        devices:
          - /dev/loop0
      cinder_vg:
        devices:
          - /dev/loop1

opensds:
  conf:
    keystone_authtoken:
      memcached_servers '{{ site.host_ipv4 }}:{{ site.memcached.port }}'
  cinder:
    authOptions:
      noAuth: true
      endpoint: 'http://{{ site.host_ipv4 }}/identity'
      cinderEndpoint: 'http://{{ site.host_ipv4 }}:{{ cinder_endpoint }}'
      domainId: 'Default'
      domainName: 'Default'
      username: ''
      password: ''
      tenantId: 'myproject'
      tenantName: 'myproject'
  db:
    container:
      enabled: {{ site.

packages:
  archives:
    unwanted:
      - /tmp/usr/local/go
      - /tmp/usr/local/go/bin/src/github.com/opensds/nbp
      - /tmp/opt/opensds-k8s-linux-amd64
      - /tmp/opt/opensds-linux-amd64
    wanted:
      golang:
        dest: /tmp/usr/local/go
        options: '--strip-components=1'
        dl:
          src: https://storage.googleapis.com/golang/go{{ release.golang }}.linux-amd64.tar.gz
          hashsum: '{{ release.hashsum.golang }}'
      opensds-nbp-src:
        dest: /tmp/usr/local/go/bin/src/github.com/opensds/nbp
        options: '--strip-components=1'
        dl:
          src: {{ site.uri.opensds }}/nbp/archive/{{ release.nbp }}.tar.gz
          hashsum: '{{ release.hashsum.nbp }}'
      opensds-nbp-k8s:
        dest: /tmp/opt/opensds-k8s-linux-amd64
        options: '--strip-components=1'
        mode: '0755'
        dl:
          src: {{ site.uri.nbp }}/{{ aruba.release.opensds }}/opensds-k8s-{{ aruba.release.opensds }}-linux-amd64.tar.gz
          hashsum: '{{ release.hashsum.sds_k8s }}'
      opensds:
        dest: /tmp/opt/opensds-linux-amd64
        options: '--strip-components=1'
        dl:
          src: {{ site.uri.opensds }}/{{ aruba.release.opensds }}/opensds-{{ aruba.release.opensds }}-linux-amd64.tar.gz
          hashsum: '{{ release.hashsum.opensds }}'
      cinder-blockbox:
        dest: /tmp/opt/opensds-k8s-linux-amd64/cinder
        dl:
          src: https://raw.githubusercontent.com/openstack/cinder/master/contrib/block-box/docker-compose.yml

docker:
  compose:
    controller:
      image: {{ site.uri.img_controller }}
      container_name: opensds-controller
      network_mode: host
      ports:
        - '{{ site.host_ipv4 }}:{{ site.devstack.keyport }}:{{ site.devstack.keyport }}'
      volumes:
        - '/etc/opensds/:/etc/opensds'
        # '/usr/share/ca-certificates/:/etc/ssl/certs'
      deploy:
        restart_policy:
          condition: on-failure
          delay: 5s
          max_attempts: 3
          window: 120s
    dock:
      image: {{ site.uri.img_dock }}
      container_name: osdsdock
      privileged: True
      network_mode: host
      ports: []
      volumes:
        - '/etc/opensds/:/etc/opensds'
        - '/etc/ceph/:/etc/ceph'
      deploy:
        restart_policy:
          condition: on-failure
          delay: 5s
          max_attempts: 3
          window: 120s
    dashboard:
      image: {{ site.uri.img_dashboard }}
      container_name: dashboard
      privileged: True
      network_mode: host
      ports: []
      volumes: []
      deploy:
        restart_policy:
          condition: on-failure
          delay: 5s
          max_attempts: 3
          window: 120s
    db:
      image: {{ site.uri.img_etcd }}
      container_name: osdsdb
      privileged: True
      network_mode: host
      ports:
        - '127.0.0.1:2379:2379'
        - '127.0.0.1:2380:2380'
      volumes:
        - /usr/share/ca-certificates/:/etc/ssl/certs
      deploy:
        restart_policy:
          condition: on-failure
          delay: 5s
          max_attempts: 3
          window: 120s

etcd:
  version '{{ site.etcd.version }}'
  service:
    name: {{ site.etcd.servicename }}
    etcd_endpoints: 'https://{{ site.host_ipv4 }}:{{ site.etcd.portA }},https://{{ site.host_ipv4 }}:{{ site.etcd.portB }}'
  docker:
    enabled: True

devstack:
  cli:
    user:
      create:
        {{ site.devstack.servicename }}:
          options:
            domain: '{{ site.devstack.user_domain_name }}'
            password: '{{ site.devstack.password }}'
            project: '{{ site.devstack.project_name }}'
            enable: True
      delete:
        demo:
          options:
            domain: '{{ site.devstack.user_domain_name }}'
        alt_demo:
          options:
            domain: '{{ site.devstack.user_domain_name }}'
    group:
      create:
        service:
          options:
            domain: '{{ site.devstack.user_domain_name }}'
      add user:
        service:
          target:
            - '{{ site.devstack.servicename }}'
        admins:
          options:
            domain: '{{ site.devstack.user_domain_name }}'
          target:
            - admin
    role:
      add:
        admin:
          options:
            project: '{{ site.devstack.project_name }}'
            target:
              - '{{ site.devstack.servicename }}'
        service:
          options:
            project: '{{ site.devstack.project_name }}'
            group: service
    service:
      create:
        {{ site.devstack.servicetype }}:
          options:
            name: '{{ site.devstack.servicename }}'
            type: identity
            description: OpenSDS Block Storage
            enable: True
    endpoint:
      create:
        {% set point1 = site.devstack.endpointname1 or 'opensds' ~ site.release.opensds %}
        '{{ point1 }} public https://{{ site.host_ipv4 }}/{{ site.devstack.keyport }}/{{ release.opensds }}/%\(tenant_id\)s':
          options:
            region: RegionOne
            enable: True
        '{{ point1 }} internal https://{{ site.host_ipv4 }}/{{ site.devstack.keyport }}/{{ release.opensds }}/%\(tenant_id\)s':
          options:
            region: RegionOne
            enable: True
        '{{ point1 }} admin https://{{ site.host_ipv4 }}/{{ site.devstack.keyport }}/{{ release.opensds }}/%\(tenant_id\)s':
          options:
            region: RegionOne
            enable: True
    project:
      delete:
        demo:
          options:
            domain: '{{ site.devstack.project_domain_name }}'
        alt_demo:
          options:
            domain: '{{ site.devstack.project_domain_name }}'
        invisible_to_admin:
          options:
            domain: '{{ site.devstack.project_domain_name }}'
