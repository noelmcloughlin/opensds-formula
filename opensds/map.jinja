### opensds/map.jinja ###
### exported dicts: opensds, driver, docker, firewalld, golang, ceph,  ###

#OpenSDS: import formula default dicts
{% import_yaml "opensds/defaults.yaml" as defaults %}
{% import_yaml "opensds/hotpot/defaults.yaml" as hotpot %}
{% import_yaml "opensds/auth/defaults.yaml" as auth %}
{% import_yaml "opensds/dashboard/defaults.yaml" as dashboard %}
{% import_yaml "opensds/database/defaults.yaml" as database %}
{% import_yaml "opensds/dock/defaults.yaml" as dock %}
{% import_yaml "opensds/dock/block/defaults.yaml" as block %}
{% import_yaml "opensds/let/defaults.yaml" as let %}
{% import_yaml "opensds/sushi/defaults.yaml" as sushi %}
{% import_yaml "opensds/gelato/defaults.yaml" as gelato %}
{% import_yaml "opensds/osfamilymap.yaml" as osfamilymap %}
{% import_yaml "opensds/osmap.yaml" as osmap %}

#OpenSDS: merge any pillar data with defaults
{%- set opensds = salt['grains.filter_by'](
     defaults, merge=salt['grains.filter_by'](
        hotpot, merge=salt['grains.filter_by'](
           auth, merge=salt['grains.filter_by'](
              dashboard, merge=salt['grains.filter_by'](
                 database, merge=salt['grains.filter_by'](
                    dock, merge=salt['grains.filter_by'](
                       block, merge=salt['grains.filter_by'](
                          let, merge=salt['grains.filter_by'](
                             sushi, merge=salt['grains.filter_by'](
                                gelato, merge=salt['grains.filter_by'](
                                   osfamilymap, grain='os_family', merge=salt['grains.filter_by'](
                                      osmap, grain='os', merge=salt['pillar.get']('opensds', {}),
                                      base='opensds',),
                                   base='opensds',),
                                base='opensds',),
                             base='opensds',),
                          base='opensds',),
                       base='opensds',),
                    base='opensds',),
                 base='opensds',),
              base='opensds',),
           base='opensds',),
        base='opensds',),
     base='opensds',)
%}

#################################################################
# To access 3rd-party salt formula defaults (in opensds-formula)
# we import their defaults.yaml file & then merge our pillar data
# ontop. The resulting DICT is accessible in this formula.
# Here is the method illustrated ....
############################################################
{% import_yaml "firewalld/defaults.yaml" as firewalld %}
{% import_yaml "golang/defaults.yaml" as golang %}
{% import_yaml "docker/defaults.yaml" as docker %}
{% import_yaml "devstack/defaults.yaml" as devstack %}
{% import_yaml "etcd/defaults.yaml" as etcd %}

{%- set firewalld = salt['grains.filter_by']( firewalld, merge=salt['pillar.get']('firewalld', {}), base='firewalld') %}
{%- set golang = salt['grains.filter_by']( golang, merge=salt['pillar.get']('golang', {}), base='golang') %}
{%- set etcd = salt['grains.filter_by']( etcd, merge=salt['pillar.get']('ceph', {}), base='ceph') %}
{%- set docker = salt['grains.filter_by']( docker, merge=salt['pillar.get']('docker', {}), base='docker') %}
{%- set devstack = salt['grains.filter_by']( devstack, merge=salt['pillar.get']('devstack', {}), base='devstack') %}

####################################################################
# DRIVER: merge any pillar data onto vendor supplied driver(.yaml)
####################################################################
{% from "opensds/files/macros.jinja" import deep_merge with context %}
{%- import_yaml 'opensds/dock/drivers/' ~ opensds.dock.block.provider ~ '.yaml' as driver %}
{%- do deep_merge(driver, opensds.driver) %}

#################################
# SITE SPECIFIC PARAM INJECTION
################################
{%- if opensds.dock.block.provider in ('lvm',) %}
  {%- do driver.update({'tgtBindIp': opensds.host or '127.0.0.1'}) %}
{%- endif %}
