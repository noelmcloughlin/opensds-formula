###  opensds/map.jinja ###
### exported dicts: opensds, driver, docker, firewalld, golang, etcd, ceph ###

#OpenSDS: import formula default dicts
{% import_yaml "opensds/yaml/defaults.yaml" as defaults %}
{% import_yaml "opensds/yaml/osfamilymap.yaml" as osfamilymap %}
{% import_yaml "opensds/yaml/osmap.yaml" as osmap %}
{% import_yaml "opensds/database/defaults.yaml" as database %}
{% import_yaml "opensds/hotpot/defaults.yaml" as hotpot %}
{% import_yaml "opensds/auth/defaults.yaml" as auth %}
{% import_yaml "opensds/gelato/defaults.yaml" as gelato %}
{% import_yaml "opensds/backend/defaults.yaml" as backend %}
{% import_yaml "opensds/backend/block/defaults.yaml" as block %}
{% import_yaml "opensds/dashboard/defaults.yaml" as dashboard %}
{% import_yaml "opensds/sushi/defaults.yaml" as sushi %}
{% import_yaml "opensds/sushi/plugin/defaults.yaml" as pluggy %}
{% import_yaml "opensds/dock/defaults.yaml" as dock %}

#OpenSDS: merge with pillar data
{%- set opensds = salt['grains.filter_by'](
     defaults, merge=salt['grains.filter_by'](
        database, merge=salt['grains.filter_by'](
           hotpot, merge=salt['grains.filter_by'](
              auth, merge=salt['grains.filter_by'](
                 gelato, merge=salt['grains.filter_by'](
                    backend, merge=salt['grains.filter_by'](
                       block, merge=salt['grains.filter_by'](
                          dashboard, merge=salt['grains.filter_by'](
                             sushi, merge=salt['grains.filter_by'](
                                pluggy, merge=salt['grains.filter_by'](
                                   dock, merge=salt['grains.filter_by'](
                                      osfamilymap, grain='os_family', merge=salt['grains.filter_by'](
                                         osmap, grain='os', merge=salt['pillar.get']('opensds', {}),
                                         base='opensds',),
                                      base='opensds',),
                                   base='opensds',),
                                base='opensds',),
                             base='opensds',),
                          base='opensds',),
                       base='opensds',),
                    base='opensds',),
                 base='opensds',),
              base='opensds',),
           base='opensds',),
        base='opensds',),
     base='opensds',)
%}

#################################################################
# To access 3rd-party salt formula defaults (in opensds-formula)
# we import their defaults.yaml file & then merge our pillar data
# ontop. The resulting DICT is accessible in this formula.
# Here is the method illustrated ....
############################################################
{% import_yaml "firewalld/defaults.yaml" as firewalld %}
{% import_yaml "golang/defaults.yaml" as golang %}
{% import_yaml "etcd/defaults.yaml" as etcd %}
{% import_yaml "ceph/defaults.yaml" as ceph %}
{% import_yaml "docker/defaults.yaml" as docker %}
{% import_yaml "devstack/defaults.yaml" as devstack %}
{% import_yaml "packages/defaults.yaml" as packages %}

{%- set firewalld=salt['grains.filter_by'](firewalld, merge=salt['pillar.get']('firewalld',{}),base='firewalld') %}
{%- set golang = salt['grains.filter_by']( golang, merge=salt['pillar.get']('golang', {}), base='golang') %}
{%- set etcd = salt['grains.filter_by']( etcd, merge=salt['pillar.get']('etcd', {}), base='etcd') %}
{%- set ceph = salt['grains.filter_by']( ceph, merge=salt['pillar.get']('ceph', {}), base='ceph') %}
{%- set docker = salt['grains.filter_by']( docker, merge=salt['pillar.get']('docker', {}), base='docker') %}
{%- set devstack = salt['grains.filter_by']( devstack, merge=salt['pillar.get']('devstack', {}), base='devstack')%}
{%- set packages = salt['grains.filter_by']( packages, merge=salt['pillar.get']('packages', {}), base='packages')%}

##################################################################
#    UPDATE DOCK DRIVER YAML FILES:
#     * TAKE DEFAULTS
#     * MERGE SITE-SPECIFIC VALUES
##################################################################
{%- set driver = {} %}
{%- if opensds.dock.opensdsconf['osdsdock']['enabled_backends'] is string %}
    {%- set backends = opensds.backend.block.ids.split(', ') %}
{%- elif opensds.dock.opensdsconf['osdsdock']['enabled_backends'] is iterable %}
    {%- set backends = opensds.backend.block.ids %}
{%- endif %}
{%- for drv in backends %}
   {%- if drv in opensds.backend.drivers and salt['file.file_exists']('opensds/yaml/drivers' ~ drv ~ '.yaml') %}
       {%- import_yaml 'opensds/yaml/drivers/' ~ drv ~ '.yaml' as driver_yaml %}
       {%- do salt['defaults.merge'](driver_yaml, opensds.backend.drivers[drv], merge_lists=True) %}
       {%- do driver.update( driver_yaml ) %}
   {%- endif %}
{%- endfor %}
